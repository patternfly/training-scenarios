{
  "title": "Customizing Patternfly React Table",
  "description": "Practice customizing your Patternfly 4 React Table",
  "difficulty": "beginner",
  "time": "< 30 minutes",
  "details": {
    "intro": {
      "text": "intro.md",
      "code": "env-init.sh"
    },
    "steps": [
      {
        "title": "Introducing Patternfly React Table",
        "text": "step1.md"
      },
      {
        "title": "Initialize the Table",
        "text": "step2.md"
      },
      {
        "title": "Attach custom properties",
        "text": "step3.md"
      },
      {
        "title": "Customize the table keys",
        "text": "step4.md"
      },
      {
        "title": "Create dynamic table keys",
        "text": "step5.md"
      },
      {
        "title": "Set and unset basic transforms",
        "text": "step6.md"
      }
    ],
    "assets": {
      "client": [
        {
          "file": "step-2-complete.png", "target": "~/tutorial/assets/images/", "chmod": "+r"
        },
        {
          "file": "step-3-complete.png", "target": "~/tutorial/assets/images/", "chmod": "+r"
        },
        {
          "file": "step-4-complete.png", "target": "~/tutorial/assets/images/", "chmod": "+r"
        },
        {
          "file": "step-5-complete.png", "target": "~/tutorial/assets/images/", "chmod": "+r"
        },
        {
          "file": "step-6-complete.png", "target": "~/tutorial/assets/images/", "chmod": "+r"
        }
      ]
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "files": [],
  "environment": {
    "showdashboard": true,
    "delayToSaveFileAfterStopTypingMilliseconds": 2000,
    "autoFormatEnable": true,
    "dashboards": [
      {
        "name": "Web Application",
        "port": 3000
      }
    ],
    "uilayout": "editor-iframe-split",
    "uisettings": "javascript",
    "exclusionPatterns": [
      "._*",
      "package.json",
      "package-lock.json",
      "node_modules",
      "public*",
      "serviceWorker*"
    ],
    "hideHiddenFiles": true
  },
  "backend": {
    "imageid": "node",
    "port": 3000
  }
}
